Description: >
  This is an example of a long running ECS service that runs Kafka broker.

Parameters:
  Cluster:
    Description: Please provide the ECS Cluster ID that this service should run on
    Type: String

  DesiredCount:
    Description: How many instances of this task should we run across our cluster?
    Type: Number
    Default: 1

Resources:
  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: kafka-service
      ContainerDefinitions:
        - Name: kafka
          Essential: true
          Image: 925823577077.dkr.ecr.eu-west-2.amazonaws.com/wurstmeister/kafka:2.1.0
          Memory: 768
          PortMappings:
            - ContainerPort: 9092
              HostPort: 9092
            - ContainerPort: 29092
              HostPort: 29092
          Environment:
            - Name: KAFKA_ADVERTISED_HOST_NAME
              Value: kafka
            - Name: KAFKA_ZOOKEEPER_CONNECT
              Value: 'zookeeper:2181'
            - Name: KAFKA_BROKER_ID
              Value: 1
            - Name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              Value: PLAINTEXT:PLAINTEXT
            - Name: KAFKA_INTER_BROKER_LISTENER_NAME
              Value: PLAINTEXT
            - Name: KAFKA_ADVERTISED_LISTENERS
              Value: 'PLAINTEXT://kafka:9092'
            - Name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              Value: 'true'
            - Name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              Value: 1
            - Name: KAFKA_CREATE_TOPICS         # Let's create topics required by k-repository: (see also https://github.com/wurstmeister/kafka-docker - Automatically create topics )
              Value: 'prodxphone-saas-v1-commands-topic:3:1,prodxphone-saas-v1-entities-topic:3:1:compact'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365

