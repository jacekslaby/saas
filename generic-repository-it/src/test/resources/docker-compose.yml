version: "3.2"

services:
  # Using community images - https://docs.confluent.io/current/installation/docker/docs/image-reference.html
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_backend_net
      
  kafka:
    image: confluentinc/cp-kafka:5.0.1
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_backend_net

  schema-registry:
    image: confluentinc/cp-schema-registry:5.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
    networks:
      - kafka_backend_net

  generic-repository:
    image: j9soft/generic-repository:latest
    networks:
      - kafka_backend_net
      
  generic-repository-it:
    image: j9soft/generic-repository-it:latest
    depends_on:
      - kafka
      - schema-registry
    volumes:
      # on every run we want to re-use libraries previously downloaded by maven as dependencies
      - type: volume
        source: maven_repository
        target: /root/.m2
    networks:
      - kafka_backend_net
    environment:
      GRIT_BOOTSTRAP_SERVERS: kafka:29092
      GRIT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

      
volumes:
  maven_repository:

networks:
  kafka_backend_net: