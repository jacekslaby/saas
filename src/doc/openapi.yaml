openapi: 3.0.0
info:
  description: |
    This is Command API for Source Alarms repository. ('C' from 'CQRS')
    
    It accepts requests modyfining Alarms stored in Source Alarms repository.
    
    A request may concern a single Alarm (e.g. `CreateAlarm` request)
     or all Alarms from an Adapter (e.g. `DeleteAll` request).
    Stored Alarms are partitioned by tuple (DomainName, AdapterName).
    Within a partition (i.e. among alarms from the same Adapter)
     an Alarm is uniquely identified by its property `notification_identifier`.
     
    Every request has an optional `uuid` which may be used in Query API of Source Alarms repository.
    Every request concerning a single Alarm must provide property `notification_identifier`.
    
    Clients using this API must be ready for backward compatible changes in API like
     adding a not required property, adding a new request type, adding a new path, 
     adding a new HTTP method, adding a new enum value.
  version: 1.0.0
  title: Command API of Source Alarms repository
servers:
  - url: http://192.168.99.100:8084
  - url: http://192.168.99.100:8083
  - url: https://sar.j9soft.com/v1
  
paths:
  /domains/{domainName}/adapters/{adapterName}/request:
    post:
      summary: Add a new request to the repository
      operationId: addRequest
      parameters:
        - $ref: '#/components/parameters/domainName'
        - $ref: '#/components/parameters/adapterName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
            example:
              request_type: CreateAlarm
              alarm_dto:
                notification_identifier: "eric2g:south:34566"
                event_time: "2018-10-19T13:44:56.334+02:00"
                perceived_severity: 1
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '403':
          description: |
            Provided access token (in Header 'Authentication: Bearer ...') 
            does not allow to modify Alarms in this Domain and/or Adapter.

  /domains/{domainName}/adapters/{adapterName}/request/createWithList:
    post:
      summary: Add new requests to the repository
      operationId: addRequests
      parameters:
        - $ref: '#/components/parameters/domainName'
        - $ref: '#/components/parameters/adapterName'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Request'
            example:
              - request_type: ResyncAllStart
              - request_type: CreateAlarm
                alarm_dto:
                  notification_identifier: "eric2g:south:34566"
              - request_type: ResyncAllEnd
      responses:
        '200':
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestResponse'
                example: 
                  - uuid: "123e4567-e89b-12d3-a456-426655440000"
                  - uuid: "223e4567-e89b-12d3-a456-426655440001"
                  - uuid: "323e4567-e89b-12d3-a456-426655440002"
        '403':
          description: |
            Provided access token (in Header 'Authentication: Bearer ...') 
            does not allow to modify Alarms in this Domain and/or Adapter.

components:
  schemas:
    Request:
      required:
        - request_type
      properties:
        request_type:
          type: string
      oneOf:
        - $ref: '#/components/schemas/CreateAlarm'
        - $ref: '#/components/schemas/DeleteAlarm'
        - $ref: '#/components/schemas/PatchAlarm'
        - $ref: '#/components/schemas/PutAlarm'
        - $ref: '#/components/schemas/ResyncAllEnd'
        - $ref: '#/components/schemas/ResyncAllStart'
      discriminator:
        propertyName: request_type
    ResyncAllEnd:     # "ResyncAllEnd" is a value for the request_type property (the discriminator value)
      description: |
        `ResyncAllEnd` request indicates end of resynchronization.
        All not delivered alarms are deleted after this request is processed.
        In order to survive during a resynchronization 
         an alarm needs to have at least one non-DeleteAlarm request 
         between `ResyncAllStart` and `ResyncAllEnd`.
        See also `ResyncAllStart`.
    ResyncAllStart:     # "ResyncAllStart" is a value for the request_type property (the discriminator value)
      description: |
        `ResyncAllStart` request initiates resynchronization. 
        It is followed by zero or more alarm requests and finally by `RequestAllEnd` request.

    CreateAlarm:     # "CreateAlarm" is a value for the request_type property (the discriminator value)
      description: |
        `CreateAlarm` request is ignored if Alarm with such notification_identifier 
        already exists. See also `PutAlarm` and `PatchAlarm`.
      allOf: # Combines the main `AbstractAlarmRequest` schema with `CreateAlarm`-specific properties 
        - $ref: '#/components/schemas/AbstractAlarmRequest'
        # Currently none specific properties exist.
    DeleteAlarm:     # "DeleteAlarm" is a value for the request_type property (the discriminator value)
      description: |
        `DeleteAlarm` request is ignored if Alarm with such notification_identifier 
        does not exists. The only used property is `notification_identifier`.
      type: object
      properties:
        alarm_dto:
          type: object
          properties:
            notification_identifier:
              type: string
              example: "eric2g:south:34566"
    PatchAlarm:     # "PatchAlarm" is a value for the request_type property (the discriminator value)
      description: |
        `PutAlarm` request puts Alarm with such notification_identifier overwriting 
        it if it already exists. See also `CreateAlarm` and `PutAlarm`.
      allOf: # Combines the main `AbstractAlarmRequest` schema with `PatchAlarm`-specific properties 
        - $ref: '#/components/schemas/AbstractAlarmRequest'
        # Currently none specific properties exist.
    PutAlarm:     # "PutAlarm" is a value for the request_type property (the discriminator value)
      description: |
        `PutAlarm` request puts Alarm with such notification_identifier overwriting 
        it if it already exists. See also `CreateAlarm` and `PatchAlarm`.
      allOf: # Combines the main `AbstractAlarmRequest` schema with `PutAlarm`-specific properties 
        - $ref: '#/components/schemas/AbstractAlarmRequest'
        # Currently none specific properties exist.
    AbstractAlarmRequest:
      description: | 
        `AbstractAlarmRequest` is used as to gather common properties for types of all Alarm requests.
      type: object
      # all other properties specific to a `AbstractAlarmRequest`
      properties:
        alarm_dto:
          $ref: '#/components/schemas/AlarmDTO'
      required: 
        - alarm_dto
    AlarmDTO:
      description: AlarmDTO is used to transport Alarm properties from a client to the SA repository.
      type: object
      properties:
        notification_identifier:
          type: string
          example: "eric2g:south:34566"
        event_time:
          type: string
          format: dateTime
          example:   # "See https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#date.and.time.format.examples"
            "2018-10-19T13:44:56.334+02:00"
        perceived_severity:
          type: integer
          example: 1
      required: 
        - notification_identifier
      additionalProperties:    # we allow clients to add properties, i.e. it is a free-form object (arbitrary property/value pairs)
        type: string     # we will treat them as strings
    RequestResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426655440000"
            
  parameters:
    domainName:
      name: domainName
      in: path
      schema:
        type: string
      required: true
      description: The name of Domain where Adapter is located.
      example: "all"
    adapterName:
      name: adapterName
      in: path
      schema:
        type: string
      required: true
      description: The name of Adapter whose Alarms are concerned by the request.
      example: "AdapterEricsson2g-south"
      
  securitySchemes:
    bearerAuth:            # Security scheme based on header "Authorization: Bearer <JWT token>".
      type: http
      scheme: bearer
      bearerFormat: JWT    # Token needs to contain two claims {domainName:foo,adapterName:bar}
                           # matching values of path parameters. 
                           # (btw: On non production environments: {domainName:all,adapterName:all})

# Apply the security globally to all operations
security:
  - bearerAuth: []