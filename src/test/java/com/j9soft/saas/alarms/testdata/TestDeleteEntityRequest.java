package com.j9soft.saas.alarms.testdata;

import com.google.gson.Gson;
import com.j9soft.saas.alarms.model.Definitions;
import com.j9soft.saas.alarms.model.DeleteEntityRequestV1;
import org.openapitools.client.model.DeleteAlarm;
import org.openapitools.client.model.DeleteAlarmAlarmDto;

import java.time.OffsetDateTime;

public class TestDeleteEntityRequest extends TestRequestData {

    private static final String ALARM_NOID = "eric2g:341";

    private String requestJson;
    private DeleteEntityRequestV1 request;

    private TestDeleteEntityRequest() {}

    @Override
    public String getRequestJson() {
        return requestJson;
    }

    public DeleteEntityRequestV1 getRequestObject() {
        return request;
    }

    public static TestDeleteEntityRequest build() {
        TestDeleteEntityRequest result = new TestDeleteEntityRequest();

        // Let's prepare our test input request in JSON.
        String eventTimeString = "2018-10-19T13:44:56.334+02:00";
        long eventTime = OffsetDateTime.parse(eventTimeString).toInstant().toEpochMilli();
        DeleteAlarmAlarmDto alarmDtoForApi = new DeleteAlarmAlarmDto()
                .notificationIdentifier(ALARM_NOID)
                .eventTime(eventTimeString);
        DeleteAlarm alarmRequest = new DeleteAlarm()
                .requestType(DeleteAlarm.RequestTypeEnum.DELETEALARM)
                .alarmDto(alarmDtoForApi);

        // Note: Our helper model classes are generated by openapi-generator-maven-plugin
        //  and thus they require Gson to be properly serialized to JSON.
        //  (btw: with com.fasterxml.jackson.databind.ObjectMapper there were camel names in JSON,
        //    i.e. as field names e.g. "requestType" instead of 'request_type'.)
        Gson gson = new Gson();
        result.requestJson = gson.toJson(alarmRequest);

        // Let's prepare the expected request. (i.e. expected to be generated and saved in Dao)
        result.request = DeleteEntityRequestV1.newBuilder()
                .setUuid("foo")  // we expect it to be overwritten  (it is required in DAO schema so we must provide it here)
                .setEntryDate(1)  // we expect it to be overwritten  (it is required in DAO schema so we must provide it here)
                .setEntityTypeName(Definitions.ALARM_ENTITY_TYPE_NAME)
                .setEntityDomainName(DOMAIN)
                .setEntitySubdomainName(ADAPTER_NAME)
                .setEntityIdInSubdomain(ALARM_NOID)
                .setEventDate(eventTime)
                .setLineageStartDate(null)
                .build();

        return result;
    }
}
